<joblist>
  <job>
    <id>96a978e4-2e96-4b23-89c0-ff6d1d8ddad6</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/usr/bin/ruby
list=`docker ps -a -q`.chomp
if list.empty?
  puts "All the containers are already stopped!"
  exit 0
else
  list.split("\n").each do |container|
    system("docker stop #{container}")
    sleep 1
  end

  sleep 5
  system("docker ps -a")
  puts "\nAll the Docker containers have been stopped!"
end]]></script>
      </command>
    </sequence>
    <description>Stop all Docker containers.</description>
    <name>Stop all containers</name>
    <context>
      <project>docker-control</project>
    </context>
    <uuid>96a978e4-2e96-4b23-89c0-ff6d1d8ddad6</uuid>
  </job>
  <job>
    <id>f111f4ca-4ba4-4945-be86-bfe5b47a1114</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/usr/bin/ruby
images=`docker images -a -q`.chomp
if images.empty?
  puts "No images on that server!"
  exit 0
else
  images.split("\n").each do |image|
    puts "Deleting: #{image}"
    system("docker rmi -f #{image}")
    sleep 1
  end

  sleep 5
  system("docker images -a")
  puts "\nAll the Docker images have been deleted!"
end]]></script>
      </command>
    </sequence>
    <description>Delete all Docker images.</description>
    <name>Delete all images</name>
    <context>
      <project>docker-control</project>
    </context>
    <uuid>f111f4ca-4ba4-4945-be86-bfe5b47a1114</uuid>
  </job>
  <job>
    <id>416d8f91-f0c2-4603-9a70-1ad91242a51d</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <jobref name='Stop all containers' />
      </command>
      <command>
        <scriptargs />
        <script><![CDATA[#!/usr/bin/ruby
list=`docker ps -a -q`.chomp
if list.empty?
  puts "There are no containers to delete!"
  exit 0
else
  list.split("\n").each do |container|
    system("docker rm -f #{container}")
    sleep 1
  end

  sleep 5
  system("docker ps -a")
 puts "\nAll the Docker containers have been deleted!"
end]]></script>
      </command>
    </sequence>
    <description>Stop and delete all Docker containers!</description>
    <name>Delete all containers</name>
    <context>
      <project>docker-control</project>
    </context>
    <uuid>416d8f91-f0c2-4603-9a70-1ad91242a51d</uuid>
  </job>
  <job>
    <id>cd820882-15bf-4f30-b7b3-ec4e60dd548a</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

docker ps -a]]></script>
      </command>
    </sequence>
    <description>List them all!</description>
    <name>List all containers</name>
    <context>
      <project>docker-control</project>
    </context>
    <uuid>cd820882-15bf-4f30-b7b3-ec4e60dd548a</uuid>
  </job>
  <job>
    <id>bbf54c33-fc96-48eb-a61e-f887917e6abe</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

docker ps]]></script>
      </command>
    </sequence>
    <description>List only the running containers</description>
    <name>List all running containers</name>
    <context>
      <project>docker-control</project>
    </context>
    <uuid>bbf54c33-fc96-48eb-a61e-f887917e6abe</uuid>
  </job>
  <job>
    <id>0ad015fb-9883-4f11-850e-effd25517d37</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

docker images]]></script>
      </command>
    </sequence>
    <description>List all local images</description>
    <name>List all images</name>
    <context>
      <project>docker-control</project>
    </context>
    <uuid>0ad015fb-9883-4f11-850e-effd25517d37</uuid>
  </job>
</joblist>
