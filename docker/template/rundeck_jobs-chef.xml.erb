<joblist>
  <job>
    <id>a37ea70a-b691-4fad-a78e-f049000850eb</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/usr/bin/ruby

container_id=`docker ps -a |grep <%= CHEF_SERVER_CONTAINER_NAME %> |awk \'{print $1}\'`.chomp
if container_id.empty?
  puts "<%= CHEF_SERVER_CONTAINER_NAME %> is already deleted!"
  exit 0
else
  system("docker stop #{container_id}")
  sleep 2
  system("docker rm -f #{container_id}")
  puts "\n<%= CHEF_SERVER_CONTAINER_NAME %> container has been deleted!"
end

image_id=`docker images |grep cbuisson/chef-server |awk \'{print $3}\'`.chomp
if image_id.empty?
  puts "Chef-Server image not found!"
  exit 0
else
  system("docker rmi -f #{image_id}")
  puts "\nChef-Server image has been deleted!"
end]]></script>
      </command>
    </sequence>
    <description>Find <%= CHEF_SERVER_CONTAINER_NAME %> image and container ID then delete all the files.</description>
    <name>Remove <%= CHEF_SERVER_CONTAINER_NAME %> container</name>
    <context>
      <project>chef_server-control</project>
    </context>
    <uuid>a37ea70a-b691-4fad-a78e-f049000850eb</uuid>
  </job>
  <job>
    <id>a82e287f-e142-40d8-ad29-f065ac2e2893</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

container_id=`docker ps -a |grep <%= CHEF_SERVER_CONTAINER_NAME %> |awk '{print $1}'`
docker start $container_id
sleep 5
echo "<%= CHEF_SERVER_CONTAINER_NAME %> container has been started!"
]]></script>
      </command>
    </sequence>
    <description>Start container: <%= CHEF_SERVER_CONTAINER_NAME %></description>
    <name>Start <%= CHEF_SERVER_CONTAINER_NAME %></name>
    <context>
      <project>chef_server-control</project>
    </context>
    <uuid>a82e287f-e142-40d8-ad29-f065ac2e2893</uuid>
  </job>
  <job>
    <id>e6246fc8-9101-413c-a8e2-c2300b01aca8</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

container_id=`docker ps -a |grep <%= CHEF_SERVER_CONTAINER_NAME %> |awk '{print $1}'`
docker stop $container_id

echo "<%= CHEF_SERVER_CONTAINER_NAME %> container has been stopped!"]]></script>
      </command>
    </sequence>
    <description>Shutdown container: <%= CHEF_SERVER_CONTAINER_NAME %></description>
    <name>Stop <%= CHEF_SERVER_CONTAINER_NAME %></name>
    <context>
      <project>chef_server-control</project>
    </context>
    <uuid>e6246fc8-9101-413c-a8e2-c2300b01aca8</uuid>
  </job>
</joblist>
