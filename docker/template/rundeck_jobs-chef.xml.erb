<joblist>
  <job>
    <id>a37ea70a-b691-4fad-a78e-f049000850eb</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

image_id=`docker images |grep cbuisson/chef-server |awk '{print $3}'`
docker rmi -f $image_id

echo "cbuisson/chef-server image has been deleted!"]]></script>
      </command>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

container_id=`docker ps -a |grep <%= CHEF_SERVER_CONTAINER_NAME %> |awk '{print $1}'`
docker rm -f $container_id

echo "<%= CHEF_SERVER_CONTAINER_NAME %> container has been deleted!"]]></script>
      </command>
    </sequence>
    <description>Find <%= CHEF_SERVER_CONTAINER_NAME %> image and container ID then delete all the files.</description>
    <name>Remove <%= CHEF_SERVER_CONTAINER_NAME %> container</name>
    <context>
      <project>chef_server-control</project>
    </context>
    <uuid>a37ea70a-b691-4fad-a78e-f049000850eb</uuid>
  </job>
  <job>
    <id>a82e287f-e142-40d8-ad29-f065ac2e2893</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

container_id=`docker ps -a |grep <%= CHEF_SERVER_CONTAINER_NAME %> |awk '{print $1}'`
docker start $container_id
sleep 5
echo "<%= CHEF_SERVER_CONTAINER_NAME %> container has been started!"

container_ip=`docker inspect $container_id | grep IPAddress | cut -d '"' -f 4`
full_line="chef_server_url          'https://$container_ip:4443'"
old_ip=`cat /var/lib/rundeck/.chef/knife.rb |grep https`

if [[ $full_line != $old_ip ]];then
cat > /var/lib/rundeck/.chef/knife.rb << EOL
log_level                :info
log_location             STDOUT
cache_type               'BasicFile'
node_name                'admin'
client_key               '~/.chef/admin.pem'
validation_client_name   'chef-validator'
validation_key           '/var/lib/rundeck/.chef/chef-validator.pem'
chef_server_url          'https://$container_ip:4443'
EOL

echo -e "Updated rundeck knife.rb with new container IP!\n"
echo -e "The IP have changed for that container!\nPlease run the command below and update your ~/.chef/knife.rb to macth the current Chef-Server IP!\n"
echo -e "\e[1;36m sudo mission_control/scripts/update_chef_ip.rb\e[0m"
fi
]]></script>
      </command>
    </sequence>
    <description>Start container: <%= CHEF_SERVER_CONTAINER_NAME %></description>
    <name>Start <%= CHEF_SERVER_CONTAINER_NAME %></name>
    <context>
      <project>chef_server-control</project>
    </context>
    <uuid>a82e287f-e142-40d8-ad29-f065ac2e2893</uuid>
  </job>
  <job>
    <id>e6246fc8-9101-413c-a8e2-c2300b01aca8</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash

container_id=`docker ps -a |grep <%= CHEF_SERVER_CONTAINER_NAME %> |awk '{print $1}'`
docker stop $container_id

echo "<%= CHEF_SERVER_CONTAINER_NAME %> container has been stopped!"]]></script>
      </command>
    </sequence>
    <description>Shutdown container: <%= CHEF_SERVER_CONTAINER_NAME %></description>
    <name>Stop <%= CHEF_SERVER_CONTAINER_NAME %></name>
    <context>
      <project>chef_server-control</project>
    </context>
    <uuid>e6246fc8-9101-413c-a8e2-c2300b01aca8</uuid>
  </job>
</joblist>
